{"ast":null,"code":"/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined' ? navigator.userAgent.toLowerCase() : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\n\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\n\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\n\nexport var SAFARI_BUG_237906 = SAFARI && !!(ua.indexOf('version/15.4') >= 0 || ua.match(/cpu (os|iphone os) 15_4 like mac os x/));\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\n\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\n\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\n\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\n\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' && typeof OffscreenCanvas !== 'undefined' && self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\n\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\n\nexport var PASSIVE_EVENT_LISTENERS = function () {\n  var passive = false;\n\n  try {\n    var options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      }\n    });\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {// passive not supported\n  }\n\n  return passive;\n}();","map":{"version":3,"mappings":"AAAA;;;AAIA,IAAMA,EAAE,GACN,OAAOC,SAAP,KAAqB,WAArB,IAAoC,OAAOA,SAAS,CAACC,SAAjB,KAA+B,WAAnE,GACID,SAAS,CAACC,SAAV,CAAoBC,WAApB,EADJ,GAEI,EAHN;AAKA;;;;;AAIA,OAAO,IAAMC,OAAO,GAAGJ,EAAE,CAACK,OAAH,CAAW,SAAX,MAA0B,CAAC,CAA3C;AAEP;;;;;AAIA,OAAO,IAAMC,MAAM,GAAGN,EAAE,CAACK,OAAH,CAAW,QAAX,MAAyB,CAAC,CAA1B,IAA+BL,EAAE,CAACK,OAAH,CAAW,OAAX,KAAuB,CAAC,CAAtE;AAEP;;;;;AAIA,OAAO,IAAME,iBAAiB,GAC5BD,MAAM,IACN,CAAC,EACCN,EAAE,CAACK,OAAH,CAAW,cAAX,KAA8B,CAA9B,IACAL,EAAE,CAACQ,KAAH,CAAS,uCAAT,CAFD,CAFI;AAOP;;;;;AAIA,OAAO,IAAMC,MAAM,GAAGT,EAAE,CAACK,OAAH,CAAW,QAAX,MAAyB,CAAC,CAA1B,IAA+BL,EAAE,CAACK,OAAH,CAAW,MAAX,KAAsB,CAAC,CAArE;AAEP;;;;;AAIA,OAAO,IAAMK,GAAG,GAAGV,EAAE,CAACK,OAAH,CAAW,WAAX,MAA4B,CAAC,CAAzC;AAEP;;;;;;;;AAOA,OAAO,IAAMM,kBAAkB,GAC7B,OAAOC,gBAAP,KAA4B,WAA5B,GAA0CA,gBAA1C,GAA6D,CADxD;AAGP;;;;;;AAKA,OAAO,IAAMC,uBAAuB,GAClC,OAAOC,iBAAP,KAA6B,WAA7B,IACA,OAAOC,eAAP,KAA2B,WAD3B,IAEAC,IAAI,YAAYF,iBAHX,C,CAG8B;;AAErC;;;;;AAIA,OAAO,IAAMG,YAAY,GACvB,OAAOC,KAAP,KAAiB,WAAjB,IAAgCA,KAAK,CAACC,SAAN,CAAgBC,MAD3C;AAGP;;;;AAGA,OAAO,IAAMC,uBAAuB,GAAI;AACtC,MAAIC,OAAO,GAAG,KAAd;;AACA,MAAI;AACF,QAAMC,OAAO,GAAGC,MAAM,CAACC,cAAP,CAAsB,EAAtB,EAA0B,SAA1B,EAAqC;AACnDC,SAAG,EAAE;AACHJ,eAAO,GAAG,IAAV;AACD;AAHkD,KAArC,CAAhB;AAMAK,UAAM,CAACC,gBAAP,CAAwB,GAAxB,EAA6B,IAA7B,EAAmCL,OAAnC;AACAI,UAAM,CAACE,mBAAP,CAA2B,GAA3B,EAAgC,IAAhC,EAAsCN,OAAtC;AACD,GATD,CASE,OAAOO,KAAP,EAAc,CACd;AACD;;AACD,SAAOR,OAAP;AACD,CAfsC,EAAhC","names":["ua","navigator","userAgent","toLowerCase","FIREFOX","indexOf","SAFARI","SAFARI_BUG_237906","match","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","prototype","decode","PASSIVE_EVENT_LISTENERS","passive","options","Object","defineProperty","get","window","addEventListener","removeEventListener","error"],"sources":["C:\\Users\\GAURA\\comp-4800-team-4\\client\\node_modules\\ol\\src\\has.js"],"sourcesContent":["/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  !!(\n    ua.indexOf('version/15.4') >= 0 ||\n    ua.match(/cpu (os|iphone os) 15_4 like mac os x/)\n  );\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n"]},"metadata":{},"sourceType":"module"}