{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useRef, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { tryWatchLocation, addBadgePins, addUserPin, createMap } from \"./mapUtilities\";\nimport sentinelsLabel from \"../images/sentinelsLabel.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  mapContainer: {\n    width: \"95%\"\n  },\n  map: {\n    zIndex: 0,\n    height: 400,\n    width: \"100%\",\n    borderRadius: 50,\n    overflow: \"hidden\"\n  },\n  mapLabel: {\n    width: 200,\n    height: 100,\n    zIndex: 10,\n    marginLeft: 25,\n    marginBottom: -100,\n    resizeMode: \"contain\"\n  }\n});\n\nvar UserMap = function UserMap() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      map = _useState2[0],\n      setMap = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userPin = _useState4[0],\n      setUserPin = _useState4[1];\n\n  var mapElement = useRef();\n  useEffect(function () {\n    if (!map) {\n      var createdMap = createMap(mapElement);\n      setMap(createdMap);\n      return;\n    }\n\n    if (!userPin) {\n      var newUserPin = addUserPin(map);\n      setUserPin(newUserPin);\n      map.addLayer(newUserPin);\n      return;\n    }\n\n    addBadgePins(map);\n    tryWatchLocation(userPin);\n  });\n  return _jsxs(View, {\n    style: styles.mapContainer,\n    children: [_jsx(Image, {\n      style: styles.mapLabel,\n      source: sentinelsLabel\n    }), _jsx(View, {\n      style: styles.map,\n      ref: mapElement\n    })]\n  });\n};\n\nexport default UserMap;","map":{"version":3,"sources":["C:/Users/Joshua/comp-4800-team-4/client/UserMap/UserMap.js"],"names":["useState","useRef","useEffect","tryWatchLocation","addBadgePins","addUserPin","createMap","sentinelsLabel","styles","StyleSheet","create","mapContainer","width","map","zIndex","height","borderRadius","overflow","mapLabel","marginLeft","marginBottom","resizeMode","UserMap","setMap","userPin","setUserPin","mapElement","createdMap","newUserPin","addLayer"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;;;;AAIA,SAASC,gBAAT,EAA2BC,YAA3B,EAAyCC,UAAzC,EAAqDC,SAArD;AACA,OAAOC,cAAP;;;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE;AADK,GADiB;AAI/BC,EAAAA,GAAG,EAAE;AACHC,IAAAA,MAAM,EAAE,CADL;AAEHC,IAAAA,MAAM,EAAE,GAFL;AAGHH,IAAAA,KAAK,EAAE,MAHJ;AAIHI,IAAAA,YAAY,EAAE,EAJX;AAKHC,IAAAA,QAAQ,EAAE;AALP,GAJ0B;AAW/BC,EAAAA,QAAQ,EAAE;AACRN,IAAAA,KAAK,EAAE,GADC;AAERG,IAAAA,MAAM,EAAE,GAFA;AAGRD,IAAAA,MAAM,EAAE,EAHA;AAIRK,IAAAA,UAAU,EAAE,EAJJ;AAKRC,IAAAA,YAAY,EAAE,CAAC,GALP;AAMRC,IAAAA,UAAU,EAAE;AANJ;AAXqB,CAAlB,CAAf;;AAqBA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,kBAAsBtB,QAAQ,EAA9B;AAAA;AAAA,MAAOa,GAAP;AAAA,MAAYU,MAAZ;;AACA,mBAA8BvB,QAAQ,EAAtC;AAAA;AAAA,MAAOwB,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,UAAU,GAAGzB,MAAM,EAAzB;AAEAC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACW,GAAL,EAAU;AACR,UAAIc,UAAU,GAAGrB,SAAS,CAACoB,UAAD,CAA1B;AACAH,MAAAA,MAAM,CAACI,UAAD,CAAN;AACA;AACD;;AAED,QAAI,CAACH,OAAL,EAAc;AACZ,UAAII,UAAU,GAAGvB,UAAU,CAACQ,GAAD,CAA3B;AACAY,MAAAA,UAAU,CAACG,UAAD,CAAV;AACAf,MAAAA,GAAG,CAACgB,QAAJ,CAAaD,UAAb;AACA;AACD;;AAEDxB,IAAAA,YAAY,CAACS,GAAD,CAAZ;AACAV,IAAAA,gBAAgB,CAACqB,OAAD,CAAhB;AACD,GAhBQ,CAAT;AAkBA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACG,YAApB;AAAA,eACE,KAAC,KAAD;AAAO,MAAA,KAAK,EAAEH,MAAM,CAACU,QAArB;AAA+B,MAAA,MAAM,EAAEX;AAAvC,MADF,EAEE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACK,GAApB;AAAyB,MAAA,GAAG,EAAEa;AAA9B,MAFF;AAAA,IADF;AAOD,CA9BD;;AAgCA,eAAeJ,OAAf","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\r\nimport { View, Image, StyleSheet } from \"react-native\";\r\n\r\n\r\nimport { tryWatchLocation, addBadgePins, addUserPin, createMap } from \"./mapUtilities\";\r\nimport sentinelsLabel from \"../images/sentinelsLabel.png\";\r\n\r\nconst styles = StyleSheet.create({\r\n  mapContainer: {\r\n    width: \"95%\",\r\n  },\r\n  map: {\r\n    zIndex: 0,\r\n    height: 400,\r\n    width: \"100%\",\r\n    borderRadius: 50,\r\n    overflow: \"hidden\"\r\n  },\r\n  mapLabel: {\r\n    width: 200,\r\n    height: 100,\r\n    zIndex: 10,\r\n    marginLeft: 25,\r\n    marginBottom: -100,\r\n    resizeMode: \"contain\",\r\n  }\r\n});\r\n\r\nconst UserMap = () => {\r\n  const [map, setMap] = useState();\r\n  const [userPin, setUserPin] = useState();\r\n  const mapElement = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!map) {\r\n      let createdMap = createMap(mapElement);\r\n      setMap(createdMap);\r\n      return;\r\n    }\r\n\r\n    if (!userPin) {\r\n      let newUserPin = addUserPin(map);\r\n      setUserPin(newUserPin);\r\n      map.addLayer(newUserPin);\r\n      return;\r\n    }\r\n\r\n    addBadgePins(map);\r\n    tryWatchLocation(userPin);\r\n  });\r\n\r\n  return (\r\n    <View style={styles.mapContainer}>\r\n      <Image style={styles.mapLabel} source={sentinelsLabel} />\r\n      <View style={styles.map} ref={mapElement} />\r\n    </View>\r\n    \r\n  );\r\n};\r\n\r\nexport default UserMap;\r\n"]},"metadata":{},"sourceType":"module"}