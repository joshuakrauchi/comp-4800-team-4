{"ast":null,"code":"/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return (\n    /** @type {?} */\n    function () {\n      throw new Error('Unimplemented abstract method.');\n    }()\n  );\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\n\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\n\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\n\nexport var VERSION = '6.14.1';","map":{"version":3,"mappings":"AAAA;;;;AAIA;;;AAGA,OAAM,SAAUA,QAAV,GAAkB;AACtB;AAAO;AACJ;AACC,YAAM,IAAIC,KAAJ,CAAU,gCAAV,CAAN;AACD,KAFD;AADF;AAKD;AAED;;;;;;AAKA,IAAIC,WAAW,GAAG,CAAlB;AAEA;;;;;;;;;;AASA,OAAM,SAAUC,MAAV,CAAiBC,GAAjB,EAAoB;AACxB,SAAOA,GAAG,CAACC,MAAJ,KAAeD,GAAG,CAACC,MAAJ,GAAaC,MAAM,CAAC,EAAEJ,WAAH,CAAlC,CAAP;AACD;AAED;;;;;AAIA,OAAO,IAAMK,OAAO,GAAG,QAAhB","names":["abstract","Error","uidCounter_","getUid","obj","ol_uid","String","VERSION"],"sources":["C:\\Users\\GAURA\\comp-4800-team-4\\client\\node_modules\\ol\\src\\util.js"],"sourcesContent":["/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n"]},"metadata":{},"sourceType":"module"}