{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { WebView } from 'react-native-webview';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar MyWeb = function (_Component) {\n  _inherits(MyWeb, _Component);\n\n  var _super = _createSuper(MyWeb);\n\n  function MyWeb() {\n    _classCallCheck(this, MyWeb);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyWeb, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(WebView, {\n        source: {\n          uri: 'https://infinite.red'\n        },\n        style: {\n          marginTop: 20,\n          maxHeight: 200,\n          width: 320,\n          height: 200,\n          flex: 1\n        }\n      });\n    }\n  }]);\n\n  return MyWeb;\n}(Component);\n\nexport default MyWeb;","map":{"version":3,"sources":["C:/Users/Joshua/comp-4800-team-4/client/UserMap/TestMap.js"],"names":["React","Component","WebView","MyWeb","uri","marginTop","maxHeight","width","height","flex"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,sBAAxB;;;IAEMC,K;;;;;;;;;;;;;WACJ,kBAAS;AACP,aACE,KAAC,OAAD;AACE,QAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAE;AAAP,SADV;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE,EAAb;AACLC,UAAAA,SAAS,EAAE,GADN;AAELC,UAAAA,KAAK,EAAE,GAFF;AAGLC,UAAAA,MAAM,EAAE,GAHH;AAILC,UAAAA,IAAI,EAAE;AAJD;AAFT,QADF;AAUD;;;;EAZiBR,S;;AAepB,eAAeE,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { WebView } from 'react-native-webview';\r\n\r\nclass MyWeb extends Component {\r\n  render() {\r\n    return (\r\n      <WebView\r\n        source={{ uri: 'https://infinite.red' }}\r\n        style={{ marginTop: 20,\r\n          maxHeight: 200,\r\n          width: 320,\r\n          height: 200,\r\n          flex: 1 }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyWeb;"]},"metadata":{},"sourceType":"module"}