{"ast":null,"code":"import Map from\"ol/Map\";import TileLayer from\"ol/layer/Tile\";import MapView from\"ol/View\";import Feature from\"ol/Feature\";import VectorLayer from\"ol/layer/Vector\";import VectorSource from\"ol/source/Vector\";import OSM from\"ol/source/OSM\";import{fromLonLat}from\"ol/proj\";import{Attribution,defaults as defaultControls}from\"ol/control\";import{Icon,Style}from\"ol/style\";import{Point}from\"ol/geom\";import pinData from\"../data/pinData\";import pinImage from\"../images/pinImage.png\";var createPinLayer=function createPinLayer(lon,lat,name,image){var coords=fromLonLat([lon,lat]);var pinFeature=new Feature({geometry:new Point(coords)});var pinSource=new VectorSource({features:[pinFeature]});var pinStyle=new Style({image:new Icon({src:image,scale:1.0,opacity:0.85})});return new VectorLayer({source:pinSource,style:pinStyle,name:name});};var tryWatchLocation=function tryWatchLocation(userPin){if(!navigator.geolocation)return;navigator.geolocation.watchPosition(function(position){updateLocation(position,userPin);});};var updateLocation=function updateLocation(currentPosition,userPin){var coords=currentPosition.coords;userPin.getSource().getFeatures()[0].getGeometry().setCoordinates(fromLonLat([coords.longitude,coords.latitude]));};var addBadgePins=function addBadgePins(map){Object.keys(pinData).forEach(function(key){var name=key;var crab=pinData[key];map.addLayer(createPinLayer(crab.lon,crab.lat,name,crab.pinImage));map.addLayer(createPinLayer(crab.lon,crab.lat-0.0001,name,crab.crabImage));});};var addUserPin=function addUserPin(){return createPinLayer(0,0,\"Your Location\",pinImage);};var createMap=function createMap(mapElement){var attribution=new Attribution({collapsible:true});var mapControls=defaultControls({attribution:false,zoom:false}).extend([attribution]);var initialMap=new Map({target:mapElement.current,layers:[new TileLayer({source:new OSM()})],view:new MapView({center:[26371208.304614782,6321386.5232699495],zoom:19,minZoom:18.8,constrainOnlyCenter:true,extent:[26370907.255707346,6321082,26371437.9,6321574]}),controls:mapControls});initialMap.on(\"singleclick\",function(event){initialMap.forEachFeatureAtPixel(event.pixel,function(feature){console.log(feature.getGeometry().getFlatCoordinates());});});return initialMap;};export{tryWatchLocation,addBadgePins,addUserPin,createMap};","map":{"version":3,"sources":["C:/Users/Joshua/comp-4800-team-4/client/UserMap/mapUtilities.js"],"names":["Map","TileLayer","MapView","Feature","VectorLayer","VectorSource","OSM","fromLonLat","Attribution","defaults","defaultControls","Icon","Style","Point","pinData","pinImage","createPinLayer","lon","lat","name","image","coords","pinFeature","geometry","pinSource","features","pinStyle","src","scale","opacity","source","style","tryWatchLocation","userPin","navigator","geolocation","watchPosition","position","updateLocation","currentPosition","getSource","getFeatures","getGeometry","setCoordinates","longitude","latitude","addBadgePins","map","Object","keys","forEach","key","crab","addLayer","crabImage","addUserPin","createMap","mapElement","attribution","collapsible","mapControls","zoom","extend","initialMap","target","current","layers","view","center","minZoom","constrainOnlyCenter","extent","controls","on","event","forEachFeatureAtPixel","pixel","feature","console","log","getFlatCoordinates"],"mappings":"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","sourcesContent":["import Map from \"ol/Map\";\r\nimport TileLayer from \"ol/layer/Tile\";\r\nimport MapView from \"ol/View\";\r\nimport Feature from \"ol/Feature\";\r\nimport VectorLayer from \"ol/layer/Vector\";\r\nimport VectorSource from \"ol/source/Vector\";\r\nimport OSM from \"ol/source/OSM\";\r\nimport { fromLonLat } from \"ol/proj\";\r\nimport { Attribution, defaults as defaultControls } from \"ol/control\";\r\nimport { Icon, Style } from \"ol/style\";\r\nimport { Point } from \"ol/geom\";\r\n\r\nimport pinData from \"../data/pinData\";\r\nimport pinImage from \"../images/pinImage.png\";\r\n\r\n// Create a pin vector image layer for adding to the map.\r\nconst createPinLayer = (lon, lat, name, image) => {\r\n  let coords = fromLonLat([lon, lat]);\r\n  const pinFeature = new Feature({\r\n    geometry: new Point(coords),\r\n  });\r\n\r\n  const pinSource = new VectorSource({\r\n    features: [pinFeature],\r\n  });\r\n\r\n  const pinStyle = new Style({\r\n    image: new Icon({\r\n      src: image,\r\n      scale: 1.0,\r\n      opacity: 0.85,\r\n    }),\r\n  });\r\n\r\n  return new VectorLayer({\r\n    source: pinSource,\r\n    style: pinStyle,\r\n    name: name,\r\n  });\r\n};\r\n\r\n// Try to get the user's position. If allowed, update their position as much as possible.\r\nconst tryWatchLocation = (userPin) => {\r\n  if (!navigator.geolocation) return;\r\n\r\n  // Update the location if given permission.\r\n  navigator.geolocation.watchPosition((position) => {\r\n    updateLocation(position, userPin);\r\n  });\r\n};\r\n\r\nconst updateLocation = (currentPosition, userPin) => {\r\n  let coords = currentPosition.coords;\r\n  userPin\r\n    .getSource()\r\n    .getFeatures()[0]\r\n    .getGeometry()\r\n    .setCoordinates(fromLonLat([coords.longitude, coords.latitude]));\r\n};\r\n\r\nconst addBadgePins = (map) => {\r\n  Object.keys(pinData).forEach((key) => {\r\n    let name = key;\r\n    let crab = pinData[key];\r\n\r\n    map.addLayer(createPinLayer(crab.lon, crab.lat, name, crab.pinImage));\r\n    map.addLayer(createPinLayer(crab.lon, crab.lat - 0.0001, name, crab.crabImage));\r\n  });\r\n};\r\n\r\nconst addUserPin = () => {\r\n  return createPinLayer(0, 0, \"Your Location\", pinImage);\r\n}\r\n\r\nconst createMap = (mapElement) => {\r\n  // Change the default map controls to get rid of the regular attributions\r\n  // on the bottom right and replace them with a collapsible button.\r\n  const attribution = new Attribution({\r\n    collapsible: true,\r\n  });\r\n\r\n  const mapControls = defaultControls({ attribution: false, zoom: false }).extend([attribution]);\r\n\r\n  const initialMap = new Map({\r\n    target: mapElement.current,\r\n    layers: [\r\n      new TileLayer({\r\n        source: new OSM(),\r\n      }),\r\n    ],\r\n    view: new MapView({\r\n      center: [26371208.304614782, 6321386.5232699495],\r\n        zoom: 19,\r\n        minZoom: 18.8,\r\n        constrainOnlyCenter: true,\r\n        extent: [26370907.255707346, 6321082, 26371437.9, 6321574]\r\n        // 26371252.27159731, 6321397.270212819\r\n    }),\r\n    controls: mapControls,\r\n  });\r\n\r\n  initialMap.on(\"singleclick\", (event) => {\r\n    initialMap.forEachFeatureAtPixel(event.pixel, (feature) => {\r\n      console.log(feature.getGeometry().getFlatCoordinates());\r\n    });\r\n  });\r\n\r\n  return initialMap;\r\n};\r\n\r\nexport { tryWatchLocation, addBadgePins, addUserPin, createMap };\r\n"]},"metadata":{},"sourceType":"module"}