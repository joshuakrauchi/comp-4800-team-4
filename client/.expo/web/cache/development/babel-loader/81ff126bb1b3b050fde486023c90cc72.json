{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport \"ol/ol.css\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport pinData from \"./data/pinData\";\nimport circleRed from \"./images/circleRed.png\";\nimport Map from \"ol/Map\";\nimport TileLayer from \"ol/layer/Tile\";\nimport View from \"ol/View\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat } from \"ol/proj\";\nimport createPinLayer from \"./utilities/createPinLayer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar UserMap = function UserMap() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      map = _useState2[0],\n      setMap = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cookie = _useState4[0],\n      setCookie = _useState4[1];\n\n  var mapElement = useRef();\n\n  var addPins = function addPins(map) {\n    Object.keys(pinData).forEach(function (key) {\n      var name = key;\n      var crab = pinData[key];\n      map.addLayer(createPinLayer(crab.lon, crab.lat, name, circleRed));\n    });\n  };\n\n  var addLocation = function addLocation(map) {\n    if (!navigator.geolocation) return;\n\n    if (!cookie) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setCookie(position);\n      });\n    }\n\n    if (cookie) {\n      var coords = cookie.coords;\n      map.addLayer(createPinLayer(coords.longitude, coords.latitude, \"me\", circleRed));\n    }\n  };\n\n  useEffect(function () {\n    var initialMap = new Map({\n      target: mapElement.current,\n      layers: [new TileLayer({\n        source: new OSM()\n      })],\n      view: new View({\n        center: fromLonLat([37.41, 8.82]),\n        zoom: 4\n      })\n    });\n    setMap(initialMap);\n    addLocation(initialMap);\n    addPins(initialMap);\n  }, []);\n  setInterval(function (map) {\n    addLocation(map);\n  }, 1000);\n  return _jsx(\"div\", {\n    ref: mapElement,\n    style: {\n      height: \"600px\",\n      width: \"100%\"\n    }\n  });\n};\n\nexport default UserMap;","map":{"version":3,"sources":["C:/Users/Joshua/comp-4800-team-4/client/UserMap.js"],"names":["React","useState","useRef","useEffect","pinData","circleRed","Map","TileLayer","View","OSM","fromLonLat","createPinLayer","UserMap","map","setMap","cookie","setCookie","mapElement","addPins","Object","keys","forEach","key","name","crab","addLayer","lon","lat","addLocation","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","initialMap","target","current","layers","source","view","center","zoom","setInterval","height","width"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,OAAP;AACA,OAAOC,SAAP;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA,OAAOC,cAAP;;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,kBAAsBX,QAAQ,EAA9B;AAAA;AAAA,MAAOY,GAAP;AAAA,MAAYC,MAAZ;;AACA,mBAA4Bb,QAAQ,EAApC;AAAA;AAAA,MAAOc,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,UAAU,GAAGf,MAAM,EAAzB;;AAEA,MAAMgB,OAAO,GAAG,SAAVA,OAAU,CAACL,GAAD,EAAS;AACvBM,IAAAA,MAAM,CAACC,IAAP,CAAYhB,OAAZ,EAAqBiB,OAArB,CAA6B,UAACC,GAAD,EAAS;AACpC,UAAIC,IAAI,GAAGD,GAAX;AACA,UAAIE,IAAI,GAAGpB,OAAO,CAACkB,GAAD,CAAlB;AAEAT,MAAAA,GAAG,CAACY,QAAJ,CAAad,cAAc,CAACa,IAAI,CAACE,GAAN,EAAWF,IAAI,CAACG,GAAhB,EAAqBJ,IAArB,EAA2BlB,SAA3B,CAA3B;AACD,KALD;AAMD,GAPD;;AASA,MAAMuB,WAAW,GAAG,SAAdA,WAAc,CAACf,GAAD,EAAS;AAC3B,QAAI,CAACgB,SAAS,CAACC,WAAf,EAA4B;;AAE5B,QAAI,CAACf,MAAL,EAAa;AACXc,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAACC,QAAD,EAAc;AACrDhB,QAAAA,SAAS,CAACgB,QAAD,CAAT;AACD,OAFD;AAGD;;AAED,QAAIjB,MAAJ,EAAY;AACV,UAAIkB,MAAM,GAAGlB,MAAM,CAACkB,MAApB;AACApB,MAAAA,GAAG,CAACY,QAAJ,CAAad,cAAc,CAACsB,MAAM,CAACC,SAAR,EAAmBD,MAAM,CAACE,QAA1B,EAAoC,IAApC,EAA0C9B,SAA1C,CAA3B;AACD;AAEF,GAdD;;AAgBAF,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMiC,UAAU,GAAG,IAAI9B,GAAJ,CAAQ;AACzB+B,MAAAA,MAAM,EAAEpB,UAAU,CAACqB,OADM;AAEzBC,MAAAA,MAAM,EAAE,CACN,IAAIhC,SAAJ,CAAc;AACZiC,QAAAA,MAAM,EAAE,IAAI/B,GAAJ;AADI,OAAd,CADM,CAFiB;AAOzBgC,MAAAA,IAAI,EAAE,IAAIjC,IAAJ,CAAS;AACbkC,QAAAA,MAAM,EAAEhC,UAAU,CAAC,CAAC,KAAD,EAAQ,IAAR,CAAD,CADL;AAEbiC,QAAAA,IAAI,EAAE;AAFO,OAAT;AAPmB,KAAR,CAAnB;AAaA7B,IAAAA,MAAM,CAACsB,UAAD,CAAN;AAEAR,IAAAA,WAAW,CAACQ,UAAD,CAAX;AACAlB,IAAAA,OAAO,CAACkB,UAAD,CAAP;AACD,GAlBQ,EAkBN,EAlBM,CAAT;AAoBAQ,EAAAA,WAAW,CAAC,UAAC/B,GAAD,EAAS;AACnBe,IAAAA,WAAW,CAACf,GAAD,CAAX;AACD,GAFU,EAER,IAFQ,CAAX;AAIA,SAAO;AAAK,IAAA,GAAG,EAAEI,UAAV;AAAsB,IAAA,KAAK,EAAE;AAAE4B,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,KAAK,EAAE;AAA1B;AAA7B,IAAP;AACD,CAvDD;;AAyDA,eAAelC,OAAf","sourcesContent":["import \"ol/ol.css\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport pinData from \"./data/pinData\";\r\nimport circleRed from \"./images/circleRed.png\";\r\nimport Map from \"ol/Map\";\r\nimport TileLayer from \"ol/layer/Tile\";\r\nimport View from \"ol/View\";\r\nimport OSM from \"ol/source/OSM\";\r\nimport { fromLonLat } from \"ol/proj\";\r\nimport createPinLayer from \"./utilities/createPinLayer\";\r\n\r\n\r\n\r\nconst UserMap = () => {\r\n  const [map, setMap] = useState();\r\n  const [cookie, setCookie] = useState();\r\n  const mapElement = useRef();\r\n\r\n  const addPins = (map) => {\r\n    Object.keys(pinData).forEach((key) => {\r\n      let name = key;\r\n      let crab = pinData[key];\r\n\r\n      map.addLayer(createPinLayer(crab.lon, crab.lat, name, circleRed));\r\n    });\r\n  };\r\n\r\n  const addLocation = (map) => {\r\n    if (!navigator.geolocation) return;\r\n\r\n    if (!cookie) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        setCookie(position);\r\n      });\r\n    }\r\n\r\n    if (cookie) {\r\n      let coords = cookie.coords;\r\n      map.addLayer(createPinLayer(coords.longitude, coords.latitude, \"me\", circleRed));\r\n    }\r\n    \r\n  };\r\n\r\n  useEffect(() => {\r\n    const initialMap = new Map({\r\n      target: mapElement.current,\r\n      layers: [\r\n        new TileLayer({\r\n          source: new OSM(),\r\n        }),\r\n      ],\r\n      view: new View({\r\n        center: fromLonLat([37.41, 8.82]),\r\n        zoom: 4,\r\n      }),\r\n    });\r\n\r\n    setMap(initialMap);\r\n\r\n    addLocation(initialMap);\r\n    addPins(initialMap);\r\n  }, []);\r\n\r\n  setInterval((map) => {\r\n    addLocation(map);\r\n  }, 1000);\r\n\r\n  return <div ref={mapElement} style={{ height: \"600px\", width: \"100%\" }}></div>;\r\n};\r\n\r\nexport default UserMap;\r\n"]},"metadata":{},"sourceType":"module"}