{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport \"ol/ol.css\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport pinData from \"./data/pinData\";\nimport circleRed from \"./images/circleRed.png\";\nimport Map from \"ol/Map\";\nimport TileLayer from \"ol/layer/Tile\";\nimport View from \"ol/View\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat } from \"ol/proj\";\nimport createPinLayer from \"./utilities/createPinLayer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar UserMap = function UserMap() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      map = _useState2[0],\n      setMap = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cookie = _useState4[0],\n      setCookie = _useState4[1];\n\n  var mapElement = useRef();\n\n  var addLocation = function addLocation(map) {\n    if (!navigator.geolocation) return;\n\n    if (!cookie) {\n      navigator.geolocation.getCurrentPosition(function (position) {});\n    }\n  };\n\n  var createMap = function createMap() {\n    var initialMap;\n    return _regeneratorRuntime.async(function createMap$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            initialMap = new Map({\n              target: mapElement.current,\n              layers: [new TileLayer({\n                source: new OSM()\n              })],\n              view: new View({\n                center: fromLonLat([37.41, 8.82]),\n                zoom: 4\n              })\n            });\n            setMap(initialMap);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function _callee() {\n    var addPins;\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (map) {\n              _context2.next = 3;\n              break;\n            }\n\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(createMap());\n\n          case 3:\n            addPins = function addPins() {\n              Object.keys(pinData).forEach(function (key) {\n                var name = key;\n                var crab = pinData[key];\n                if (!map) return;\n                map.addLayer(createPinLayer(crab.lon, crab.lat, name, circleRed));\n              });\n            };\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return _jsx(\"div\", {\n    ref: mapElement,\n    style: {\n      height: \"600px\",\n      width: \"100%\"\n    }\n  });\n};\n\nexport default UserMap;","map":{"version":3,"sources":["C:/Users/Joshua/comp-4800-team-4/client/UserMap.js"],"names":["React","useState","useRef","useEffect","pinData","circleRed","Map","TileLayer","View","OSM","fromLonLat","createPinLayer","UserMap","map","setMap","cookie","setCookie","mapElement","addLocation","navigator","geolocation","getCurrentPosition","position","createMap","initialMap","target","current","layers","source","view","center","zoom","addPins","Object","keys","forEach","key","name","crab","addLayer","lon","lat","height","width"],"mappings":";;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,OAAP;AACA,OAAOC,SAAP;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA,OAAOC,cAAP;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,kBAAsBX,QAAQ,EAA9B;AAAA;AAAA,MAAOY,GAAP;AAAA,MAAYC,MAAZ;;AACA,mBAA4Bb,QAAQ,EAApC;AAAA;AAAA,MAAOc,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,UAAU,GAAGf,MAAM,EAAzB;;AAEA,MAAMgB,WAAW,GAAG,SAAdA,WAAc,CAACL,GAAD,EAAS;AAC3B,QAAI,CAACM,SAAS,CAACC,WAAf,EAA4B;;AAE5B,QAAI,CAACL,MAAL,EAAa;AACXI,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAACC,QAAD,EAAc,CACtD,CADD;AAED;AAOF,GAbD;;AAeA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,YAAAA,UADU,GACG,IAAIlB,GAAJ,CAAQ;AACzBmB,cAAAA,MAAM,EAAER,UAAU,CAACS,OADM;AAEzBC,cAAAA,MAAM,EAAE,CACN,IAAIpB,SAAJ,CAAc;AACZqB,gBAAAA,MAAM,EAAE,IAAInB,GAAJ;AADI,eAAd,CADM,CAFiB;AAOzBoB,cAAAA,IAAI,EAAE,IAAIrB,IAAJ,CAAS;AACbsB,gBAAAA,MAAM,EAAEpB,UAAU,CAAC,CAAC,KAAD,EAAQ,IAAR,CAAD,CADL;AAEbqB,gBAAAA,IAAI,EAAE;AAFO,eAAT;AAPmB,aAAR,CADH;AAchBjB,YAAAA,MAAM,CAACU,UAAD,CAAN;;AAdgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAiBArB,EAAAA,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACHU,GADG;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAEAU,SAAS,EAFT;;AAAA;AAKFS,YAAAA,OALE,GAKQ,SAAVA,OAAU,GAAM;AACpBC,cAAAA,MAAM,CAACC,IAAP,CAAY9B,OAAZ,EAAqB+B,OAArB,CAA6B,UAACC,GAAD,EAAS;AACpC,oBAAIC,IAAI,GAAGD,GAAX;AACA,oBAAIE,IAAI,GAAGlC,OAAO,CAACgC,GAAD,CAAlB;AAEA,oBAAI,CAACvB,GAAL,EAAU;AAEVA,gBAAAA,GAAG,CAAC0B,QAAJ,CAAa5B,cAAc,CAAC2B,IAAI,CAACE,GAAN,EAAWF,IAAI,CAACG,GAAhB,EAAqBJ,IAArB,EAA2BhC,SAA3B,CAA3B;AACD,eAPD;AAQD,aAdO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAmBN,EAnBM,CAAT;AAyBA,SAAO;AAAK,IAAA,GAAG,EAAEY,UAAV;AAAsB,IAAA,KAAK,EAAE;AAAEyB,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,KAAK,EAAE;AAA1B;AAA7B,IAAP;AACD,CA/DD;;AAiEA,eAAe/B,OAAf","sourcesContent":["import \"ol/ol.css\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport pinData from \"./data/pinData\";\r\nimport circleRed from \"./images/circleRed.png\";\r\nimport Map from \"ol/Map\";\r\nimport TileLayer from \"ol/layer/Tile\";\r\nimport View from \"ol/View\";\r\nimport OSM from \"ol/source/OSM\";\r\nimport { fromLonLat } from \"ol/proj\";\r\nimport createPinLayer from \"./utilities/createPinLayer\";\r\n\r\nconst UserMap = () => {\r\n  const [map, setMap] = useState();\r\n  const [cookie, setCookie] = useState();\r\n  const mapElement = useRef();\r\n\r\n  const addLocation = (map) => {\r\n    if (!navigator.geolocation) return;\r\n\r\n    if (!cookie) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n      });\r\n    }\r\n\r\n    /*if (cookie && map) {\r\n      let coords = cookie.coords;\r\n      map.addLayer(createPinLayer(coords.longitude, coords.latitude, \"me\", circleRed));\r\n    }*/\r\n    \r\n  };\r\n\r\n  const createMap = async () => {\r\n    const initialMap = new Map({\r\n      target: mapElement.current,\r\n      layers: [\r\n        new TileLayer({\r\n          source: new OSM(),\r\n        }),\r\n      ],\r\n      view: new View({\r\n        center: fromLonLat([37.41, 8.82]),\r\n        zoom: 4,\r\n      }),\r\n    });\r\n\r\n    setMap(initialMap);\r\n  }\r\n\r\n  useEffect(async () => {\r\n    if (!map) {\r\n      await createMap();\r\n    }\r\n\r\n    const addPins = () => {\r\n      Object.keys(pinData).forEach((key) => {\r\n        let name = key;\r\n        let crab = pinData[key];\r\n\r\n        if (!map) return;\r\n  \r\n        map.addLayer(createPinLayer(crab.lon, crab.lat, name, circleRed));\r\n      });\r\n    };\r\n\r\n    //addLocation(initialMap);\r\n    \r\n    //addPins(initialMap);\r\n  }, []);\r\n\r\n  /*setInterval((map) => {\r\n    setCookie(60);\r\n  }, 5000);*/\r\n\r\n  return <div ref={mapElement} style={{ height: \"600px\", width: \"100%\" }}></div>;\r\n};\r\n\r\nexport default UserMap;\r\n"]},"metadata":{},"sourceType":"module"}